name: Deploy Application

on:
  push:
    branches:
      - main
    paths:
      - api/**

  workflow_dispatch:

jobs:
  deploy:
    defaults:
      run:
        shell: bash
        working-directory: ./api
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: ${{ vars.AWS_DEPLOY_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Install Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
        
        # Inject DB info to env and run tests here

      - name: Build Image
        run: mvn spring-boot:build-image -Dmaven.test.skip

      - name: Set VERSION environment variable
        run: |
          echo "VERSION=$(mvn help:evaluate -Dexpression='project.version' -q -DforceStdout)" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: the-bean-index
          IMAGE_TAG: latest
          APP_NAME: the-bean-index
        run: |
          docker tag $APP_NAME:$VERSION $ECR_REPOSITORY/$APP_NAME:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "IMAGE_INFO=$($ECR_REPOSITORY:$IMAGE_TAG)" >> $GITHUB_ENV
          echo "ECR_REGISTRY=$($ECR_REGISTRY)" >> GITHUB_ENV

      - name: Get EC2 Instance IP and Key Pair ID
        run: |
          echo "EC2_IP=$(aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --output text)" >> $GITHUB_ENV
          echo "KEY_PAIR_ID=$(aws ec2 describe-key-pairs --query 'KeyPairs[*].KeyPairId' --output text)" >> $GITHUB_ENV


      - name: Get Private Key from SSM
        uses: Produce8/actions-aws-ssm-params-to-env@v1.1.0
        with:
          ssm-path: ec2/keypair/${{ env.KEY_PAIR_ID }}
          prefix: SSM_
          decryption: true

      - name: Mask and add key
        run: |
          echo "::add-mask::$(printenv 'SSM_'$KEY_PAIR_ID)"
          echo "PRIVATE_KEY=$(printenv 'SSM_'$KEY_PAIR_ID)" >> $GITHUB_ENV

      - name: Run container on EC2
        uses: appleboy/ssh-action@1.0.3
        with:
          host: ${{ env.EC2_IP }}
          username: ec2-user
          key: ${{ env.PRIVATE_KEY }}
          envs: IMAGE_INFO, ECR_REGISTRY, AWS_REGION
          script: |
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
            docker pull $ECR_REGISTRY/$IMAGE_INFO
            docker stop backend_server
            docker rm backend
            docker run --detach --name backend -p 80:8080 $IMAGE_INFO
