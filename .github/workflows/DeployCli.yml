on:
  push:
    branches:
      - main
    paths:
      - beanIndex-cli/**
  
  
  workflow_dispatch:

jobs:
  deployCli:
    defaults:
      run:
        shell: pwsh
        working-directory: ./beanIndex
    runs-on: windows-latest
    env:
      APP_NAME: bean-index-cli
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: ${{ vars.AWS_DEPLOY_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Get API URL
        run: |
          echo "API_IP=$(aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --output text)" >> $GITHUB_ENV

      - name: Write google credential file
        run: ${{ secrets.GOOGLE_CLIENT }} > ./src/main/resources/client_secret.json

      - name: Replace API base URL
        working-directory: ./src/main/resources
        run: |
          (Get-Content application.properties) -replace “http://localhost:8080”, "${{ env.API_IP }}"

      - name: Set VERSION environment variable
        run: |
          echo "VERSION=$(mvn help:evaluate -Dexpression='project.version' -q -DforceStdout)" >> $GITHUB_ENV

      - name: Package application
        run: |
          mvn package -DskipTests
          jpackage --verbose `
            --input ./target `
            --main-jar $APP_NAME-$VERSION.jar `
            --name $APP_NAME `
            --dest build/distributions `
            --vendor TheBeanIndex `
            --win-console `
            --win-dir-chooser `
            --win-menu `
            --win-shortcut `
            --win-shortcut-prompt

      - name: Create Release
        uses: actions/create-release@v1.1.4
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: $VERSION
          tag_name: Release-$VERSION
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload windows artifact
        uses: actions/upload-release-asset@v1.1.3
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/distribution/$APP_NAME-$VERSION.exe
          asset_name: $APP_NAME-$VERSION.exe
          asset_content_type: application/vnd.microsoft.portable-executable
      
